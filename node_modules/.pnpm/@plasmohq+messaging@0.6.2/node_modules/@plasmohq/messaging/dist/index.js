import{nanoid as b}from"nanoid";var l=globalThis.browser?.tabs||globalThis.chrome?.tabs,d=()=>{let e=globalThis.browser?.runtime||globalThis.chrome?.runtime;if(!e)throw new Error("Extension runtime is not available");return e},i=()=>{if(!l)throw new Error("Extension tabs API is not available");return l},m=async()=>{let e=i(),[a]=await e.query({active:!0,currentWindow:!0});return a},g=(e,a)=>!a.__internal&&e.source===globalThis.window&&e.data.name===a.name&&(a.relayId===void 0||e.data.relayId===a.relayId);var c=(e,a,n=globalThis.window)=>{let r=async s=>{if(g(s,e)&&!s.data.relayed){let o={name:e.name,relayId:e.relayId,body:s.data.body},t=await a?.(o);n.postMessage({name:e.name,relayId:e.relayId,instanceId:s.data.instanceId,body:t,relayed:!0},{targetOrigin:e.targetOrigin||"/"})}};return n.addEventListener("message",r),()=>n.removeEventListener("message",r)},y=(e,a=globalThis.window)=>new Promise((n,r)=>{let s=b(),o=new AbortController;a.addEventListener("message",t=>{g(t,e)&&t.data.relayed&&t.data.instanceId===s&&(n(t.data.body),o.abort())},{signal:o.signal}),a.postMessage({...e,instanceId:s},{targetOrigin:e.targetOrigin||"/"})});var p=async e=>d().sendMessage(e.extensionId??null,e),x=async e=>{let a=typeof e.tabId=="number"?e.tabId:(await m())?.id;if(!a)throw new Error("No active tab found to send message to.");return i().sendMessage(a,e)},h=x,M=e=>c(e,p),E=M,u=y,S=u;export{E as relay,M as relayMessage,h as sendToActiveContentScript,p as sendToBackground,u as sendToBackgroundViaRelay,x as sendToContentScript,S as sendViaRelay};
